@model lefarm.Models.ProductModel
@using lefarm.Models
@{
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    List<Brand> ListBrand = new List<Brand>();
}

<script type="text/javascript" src="~/Content/ckeditor/ckeditor.js"></script>
<div class="title">
    <div class="row">
        <div class="col-xs-10">
            <h3>
                Quản lý - Cập nhật: @Model.Name
            </h3>
        </div>
        <div class="col-xs-2 text-right">
            <a onclick="goBack()" class="btn-default">Quay lại</a>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-xs-12">
        @using (Html.BeginForm("Update", "product", FormMethod.Post, new { @enctype = "multipart/form-data", @id = "formAddProduct" }))
        {
             @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
            @Html.HiddenFor(m => m.Id);
            @Html.HiddenFor(m => m.Thumbnail);
            <span class="error">@TempData["result"]</span>
            <ol class="in-mobile">
                <li>
                    @Html.LabelFor(m => m.Name)
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control input-medium", maxlength = "70" })
                    @Html.ValidationMessageFor(b => b.Name)
                </li>
                <li>
                    @Html.Label("Danh mục")
                    @Html.DropDownListFor(m => m.CatId, (SelectList)ViewBag.Categories, "-- Select --", new { @class = "form-control input-medium" })
                </li>
                <li>
                    @Html.Label("Hashtag")
                    <div>
                        <select name="Tags" id="hashtag" data-placeholder="Nhập hashtag cho sản phẩm" class=" form-control input-medium" multiple>
                            @foreach (var s in (MultiSelectList)ViewBag.Hashtag)
                            {
                                <option selected="@s.Selected" value="@s.Value">@s.Text</option>
                            }
                        </select>
                    </div>
                    <script type="text/javascript">
                        $('#hashtag').chosen({ max_selected_options: 5 });
                        $(".chosen-choices .search-field").find("input").keydown(function (evt) {
                            var stroke = (_ref = evt.which) != null ? _ref : evt.keyCode;
                            if (stroke == 9) { // 13 = enter; 9 = tab key
                                var exists = false;
                                var newText = $(this).val();
                                $('#hashtag').find('option').each(function () {
                                    if (newText == $(this).val()) {
                                        exists = true;
                                        return false;
                                    }
                                })
                                if (!exists) {
                                    $('#hashtag').append('<option value="' + $(this).val() + '" selected="selected">' + $(this).val() + '</option>');
                                    $('#hashtag').trigger('chosen:updated');
                                }
                                $(this).focus();
                                return false;
                            }
                        });
                    </script>
                </li>
                <li>
                    @Html.Label("Hình sản phẩm (960px - 720px)")
                    <div class="row" ng-controller="imageController" ng-init="doInitialize(@Model.Id)">
                        <div class="col-xs-12" id="uiImages">
                            <div class='img-list' ng-repeat="image in items.data">
                                <img class="thumbnail {{image.IsSelected == true ?'selected' : ''}}" onclick='lefarm.file.deSelect(this)' id='{{image.Name}}' ng-src='@WebConfigurations.ThumbPath{{image.Name}}' />
                                <a onclick='lefarm.file.doDelete(this);'>x</a>
                            </div>
                            <input type="hidden" name="fileCollections" id="uifileBase64" />
                        </div>
                    </div>
                    
                    <div class="modal-body">
                        <input type="file" name="files" id="uifile" multiple accept="image/jpeg,image/png" data-show-remove="true" />
                    </div>
                </li>
                @if (GeneralFuncs.GetSettingByKey("Signature") != null)
                {
                    <li class="clear"></li>
                    <li class="w-50">
                        @Html.Label("Chữ ký")
                        @Html.TextBoxFor(m => m.Signature, new { @class = "form-control input-medium", maxlength = "50", @Value = GeneralFuncs.GetSettingByKey("Signature") })
                        @Html.ValidationMessageFor(b => b.Signature)
                    </li>
                }
                <li class="clear"></li>
                <li class="w-50 pull-left">
                    @Html.Label("Giá bán")
                    @Html.TextBoxFor(m => m.Price, new { @class = "form-control input-medium", maxlength = "9" })
                    @Html.ValidationMessageFor(b => b.Price)
                </li>
                <li class="w-50 pull-left">
                    @Html.Label("Đơn vị tính")
                    @Html.TextBoxFor(m => m.Unit, new { @class = "form-control input-medium", maxlength = "500" })
                    @Html.ValidationMessageFor(b => b.Unit)
                </li>
                @if (GeneralFuncs.GetSettingByKey("ShowQuantity") == "true")
                {
                    <li class="w-50 pull-left">
                        @Html.Label("Số lượng")
                        @Html.TextBoxFor(m => m.Quantity, new { @class = "form-control input-medium", maxlength = "9" })
                        @Html.ValidationMessageFor(b => b.Quantity)
                    </li>
                }
                <li class="clear"></li>
                @if (GeneralFuncs.GetSettingByKey("ShowProductType") == "true")
                {
                    <li class="w-50 pull-left">
                        @Html.Label("Tình trạng sản phẩm")
                        @Html.DropDownList("ProductType",
                    new SelectList(
                       new List<object> {
                            new { Value = 0, Text = "Mới" },
                            new { Value = 1, Text = "Cũ" },
                            new { Value = 2, Text = "Giảm giá" }
                       }, "Value", "Text", 0),
                      new { @class = "form-control input-medium", @onchange = "onTypeChange(this);" })
                    </li>
                    <li id="price-off" class="w-50 pull-left hide">
                        @Html.Label("Giá giảm")
                        @Html.TextBoxFor(m => m.PriceOff, new { @class = "form-control input-medium", maxlength = "9" })
                        @Html.ValidationMessageFor(b => b.PriceOff)
                    </li>
                }
                <li class="clear"></li>
                @if (GeneralFuncs.GetSettingByKey("ShowBrand") == "true")
                {
                    <li class="w-50 pull-left">
                        @Html.Label("Thương hiệu")
                        @Html.DropDownListFor(b => b.BrandId, (SelectList)ViewBag.Brand, "", new { @class = "form-control input-medium" })
                    </li>
                    <li class="w-50 pull-left">
                        @Html.Label("Sản xuất")
                        @Html.DropDownListFor(b => b.OriginId, (SelectList)ViewBag.Origin, "", new { @class = "form-control input-medium" })
                    </li>
                }
                @if (GeneralFuncs.GetSettingByKey("ShowShortDescription") == "true")
                {
                <li class="clear">
                    <p class="cursor" data-toggle="collapse" data-target="#pnlShortDescription">
                        <label>Tóm tắt</label>
                    </p>
                    <div id="pnlShortDescription" class="@(GeneralFuncs.GetSettingByKey("DefaultCollapse") == "true"?"collapse":"")">
                        @Html.TextAreaFor(b => b.ShortDescription, new
               {
                   @class = "form-control input-medium shortdescription "
               })
                        @Html.ValidationMessageFor(b => b.ShortDescription)
                    </div>
                </li>
                }
                else
                {
                    <li class="hidden">
                        @Html.TextAreaFor(b => b.ShortDescription, new { @class = "hide " })
                    </li>
                }
                <li>
                    <p class="cursor" data-toggle="collapse" data-target="#pnlDescription">
                        <label>Chi tiết</label>
                    </p>
                    @*  @Html.Label("Chi tiết")*@
                    <div id="pnlDescription" class="@(GeneralFuncs.GetSettingByKey("DefaultCollapse") == "true" ?"collapse":"")">

                        @Html.TextAreaFor(b => b.Description, new { @class = "form-control input-medium", rows = 50, cols = 100 })
                        @Html.ValidationMessageFor(b => b.Description)
                    </div>
                </li>
                <li>
                    @Html.Label("Trạng thái")
                    @Html.DropDownList("ActiveStatus", new SelectList(new List<object> { new { Value = 0, Text = "Tắt" }, new { Value = 1, Text = "Kích hoạt" } }, "Value", "Text", 1)
                    , new { @class = "form-control input-small" })
                </li>
            </ol>
            <div class="text-center">
                <br />
                <input type="submit" name="submit" value="Cập nhật" class="btn" onclick="return validateDatas()" />
                <a href="/admin/product/management" class="btn-default">Bỏ qua</a>
                <br />
                <br />
            </div>
        }
    </div>
</div>


<script type="text/javascript">
    $(function () {
        createEditor('vi', 'ShortDescription',"200px");
        createEditor('vi', 'Description');
    });
    function onTypeChange(e) {
        var index = e.options.selectedIndex;
        if (index == 2)
            $("#price-off").removeClass('hide');
        else
            $("#price-off").addClass('hide');
    }
    $("#uifile").change(function () {
        lefarm.file.readURL(this);
    });
    function validateDatas() {
        if ($("#formAddProduct").valid()) {
            lefarm.file.getFileCollections();
            return true;
        }
        else {
            $(window).scrollTop(0);
            return false;
        }
    }
</script>
